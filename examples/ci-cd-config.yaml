# CI/CD Database Fork Configuration
# This configuration enables automated PR preview databases

# =====================================
# SOURCE DATABASE CONFIGURATION
# =====================================
source:
  host: "${PGFORK_SOURCE_HOST}"
  port: 5432
  username: "${PGFORK_SOURCE_USER}"
  password: "${PGFORK_SOURCE_PASSWORD}"
  database: "${PGFORK_SOURCE_DATABASE}"
  sslmode: require

  # Optional SSL configuration
  sslcert: "${PGFORK_SOURCE_SSLCERT:-}"
  sslkey: "${PGFORK_SOURCE_SSLKEY:-}"

  # Connection pool settings
  max_connections: 16
  connect_timeout: 30s

# =====================================
# DESTINATION DATABASE CONFIGURATION
# =====================================
destination:
  host: "${PGFORK_DEST_HOST}"
  port: 5432
  username: "${PGFORK_DEST_USER}"
  password: "${PGFORK_DEST_PASSWORD}"
  sslmode: require

  # Resource management
  max_connections: 8
  statement_timeout: "30min"

# =====================================
# FORK CONFIGURATION
# =====================================
# Target database naming with templates
target_database: "{{.APP_NAME}}_pr_{{.PR_NUMBER}}"

# Core fork settings
drop_if_exists: true
chunk_size: 5000
timeout: 45m
workers: 4

# Performance optimizations
include_schema_only: false
parallel_mode: true
disable_triggers: true
vacuum_analyze: true

# Progress tracking
show_progress: true
log_level: info

# =====================================
# DATA FILTERING
# =====================================
# Exclude large/sensitive tables from forks
exclude_tables:
  - "audit_logs"           # Large audit tables
  - "performance_metrics"  # Time-series data
  - "session_data"         # Temporary session storage
  - "cache_*"              # Cache tables
  - "temp_*"               # Temporary tables
  - "logs_*"               # Log tables

# Include only specific schemas
include_schemas:
  - "public"
  - "api"
  - "core"

# Exclude specific schemas
exclude_schemas:
  - "analytics"
  - "reporting"
  - "audit"

# Custom SQL filters for data subsets
data_filters:
  users: "created_at > NOW() - INTERVAL '6 months'"
  orders: "status != 'cancelled' AND created_at > NOW() - INTERVAL '1 year'"

# =====================================
# CI/CD INTEGRATION
# =====================================
# Output and automation settings
output_format: json
quiet: false
verbose: true
dry_run: false

# GitHub Actions integration
github_actions: true
create_deployment: true
post_status_check: true

# Template variables (GitHub context automatically injected)
template_vars:
  APP_NAME: "myapp"
  ENVIRONMENT: "preview"
  REGION: "us-east-1"

# =====================================
# VALIDATION CONFIGURATION
# =====================================
validation:
  # Pre-fork validation
  check_source_connectivity: true
  check_dest_space: true
  verify_permissions: true

  # Post-fork validation
  check_row_counts: true
  verify_schemas: true
  run_health_checks: true

  # Performance validation
  max_fork_time: 30m
  min_success_rate: 95%

# =====================================
# MONITORING & OBSERVABILITY
# =====================================
monitoring:
  enable_metrics: true
  metrics_endpoint: "http://prometheus:9090/metrics"

  # Alerting thresholds
  alert_on_failure: true
  alert_on_long_duration: 20m

  # Logging
  log_queries: false
  log_performance: true
  structured_logging: true

# =====================================
# ENVIRONMENT VARIABLES REFERENCE
# =====================================
# Required for source database:
# PGFORK_SOURCE_HOST=staging-db.example.com
# PGFORK_SOURCE_USER=readonly_user
# PGFORK_SOURCE_PASSWORD=secure_password # pragma: allowlist secret
# PGFORK_SOURCE_DATABASE=myapp_staging
#
# Required for destination database:
# PGFORK_DEST_HOST=preview-db.example.com
# PGFORK_DEST_USER=admin_user
# PGFORK_DEST_PASSWORD=admin_password # pragma: allowlist secret
#
# Template variables (automatically detected from CI/CD):
# PGFORK_VAR_PR_NUMBER=123
# PGFORK_VAR_BRANCH=feature_new_api
# PGFORK_VAR_COMMIT_SHORT=abc12345
# PGFORK_VAR_COMMIT_SHA=abc123456789def
# PGFORK_VAR_APP_NAME=myapp
# PGFORK_VAR_ENVIRONMENT=preview
#
# CI/CD specific settings:
# PGFORK_OUTPUT_FORMAT=json
# PGFORK_QUIET=false
# PGFORK_VERBOSE=true
# PGFORK_DROP_IF_EXISTS=true
# PGFORK_GITHUB_ACTIONS=true

---
# =====================================
# CLEANUP CONFIGURATION
# =====================================
cleanup:
  # Database connection (usually same as destination)
  host: "${PGFORK_CLEANUP_HOST}"
  port: 5432
  username: "${PGFORK_CLEANUP_USER}"
  password: "${PGFORK_CLEANUP_PASSWORD}"
  sslmode: require

  # Cleanup patterns and rules
  pattern: "{{.APP_NAME}}_pr_*"
  older_than: "7d"

  # Size-based cleanup
  max_database_size: "10GB"
  cleanup_large_dbs: true

  # Exclude important databases
  exclude:
    - "{{.APP_NAME}}_pr_123"  # Keep specific PR database
    - "{{.APP_NAME}}_pr_main" # Keep main branch preview
    - "*_production"          # Never touch production
    - "*_staging"             # Never touch staging
    - "*_backup"              # Keep backups

  # Safety settings
  dry_run: false
  require_confirmation: false
  force: false

  # Backup before cleanup
  create_backup: true
  backup_retention: "30d"

  # Output settings
  output_format: json
  quiet: false
  verbose: true

# Cleanup environment variables:
# PGFORK_CLEANUP_HOST=preview-db.example.com
# PGFORK_CLEANUP_USER=admin_user
# PGFORK_CLEANUP_PASSWORD=admin_password # pragma: allowlist secret
# PGFORK_CLEANUP_PATTERN={{.APP_NAME}}_pr_*
# PGFORK_CLEANUP_OLDER_THAN=7d
# PGFORK_CLEANUP_FORCE=false
# PGFORK_CLEANUP_DRY_RUN=false

---
# =====================================
# ADVANCED TEMPLATE EXAMPLES
# =====================================

# PR-based naming patterns:
pr_patterns:
  simple: "{{.APP_NAME}}_pr_{{.PR_NUMBER}}"                    # myapp_pr_123
  detailed: "{{.APP_NAME}}_pr_{{.PR_NUMBER}}_{{.COMMIT_SHORT}}" # myapp_pr_123_abc1234
  env_aware: "{{.ENVIRONMENT}}_{{.APP_NAME}}_pr_{{.PR_NUMBER}}" # preview_myapp_pr_123

# Branch-based naming patterns:
branch_patterns:
  simple: "{{.APP_NAME}}_branch_{{.BRANCH}}"                   # myapp_branch_feature_api
  safe: "{{.APP_NAME}}_{{.BRANCH_SAFE}}_{{.COMMIT_SHORT}}"     # myapp_feature_api_abc1234
  dated: "{{.APP_NAME}}_{{.BRANCH_SAFE}}_{{.DATE}}"            # myapp_feature_api_20241223

# Environment-specific patterns:
env_patterns:
  dev: "dev_{{.APP_NAME}}_{{.BRANCH_SAFE}}"                    # dev_myapp_feature_api
  staging: "staging_{{.APP_NAME}}_{{.VERSION}}"                # staging_myapp_v1_2_3
  preview: "preview_{{.PR_NUMBER}}_{{.APP_NAME}}"              # preview_123_myapp

# Time-based patterns:
time_patterns:
  daily: "{{.APP_NAME}}_daily_{{.DATE}}"                       # myapp_daily_20241223
  hourly: "{{.APP_NAME}}_test_{{.DATETIME}}"                   # myapp_test_20241223_1430
  timestamp: "temp_{{.APP_NAME}}_{{.TIMESTAMP}}"               # temp_myapp_1703347200

# Feature flag patterns:
feature_patterns:
  experiment: "exp_{{.FEATURE_NAME}}_{{.PR_NUMBER}}"           # exp_new_checkout_123
  ab_test: "ab_{{.TEST_NAME}}_{{.VARIANT}}_{{.PR_NUMBER}}"     # ab_homepage_control_123

---
# =====================================
# SECURITY CONFIGURATION
# =====================================
security:
  # Encryption settings
  encrypt_in_transit: true
  encrypt_at_rest: true

  # Access control
  require_ssl: true
  verify_certificates: true

  # Sensitive data handling
  mask_sensitive_columns:
    - "password"
    - "email"
    - "ssn"
    - "credit_card"

  # Audit logging
  enable_audit_log: true
  audit_sensitive_operations: true

  # Network security
  allowed_source_ips:
    - "10.0.0.0/8"      # Internal network
    - "172.16.0.0/12"   # Container network

  whitelist_hosts:
    - "*.example.com"
    - "localhost"

---
# =====================================
# DISASTER RECOVERY
# =====================================
disaster_recovery:
  # Backup strategy
  create_backup_before_fork: true
  backup_retention_days: 30
  backup_compression: true

  # Recovery options
  enable_point_in_time_recovery: true
  wal_retention: "7d"

  # Failover settings
  auto_failover: false
  failover_timeout: "5m"

  # Health monitoring
  health_check_interval: "30s"
  max_failed_health_checks: 3
